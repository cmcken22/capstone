function setDate(e){var t=e.year,a=e.month-1,r=e.day,n=new Date(Date.UTC(t,a,r,0,0,0)),s=n.toISOString();return s}!function(){function e(e,t){"serviceWorker"in navigator&&window.addEventListener("load",function(){navigator.serviceWorker.register("/sw.js").then(function(e){console.log("ServiceWorker registration successful with scope: ",e.scope)}).catch(function(e){console.log("ServiceWorker registration failed: ",e)})}),e.when("/dashboard",{templateUrl:"patient/dashboard/dashboard.view.html",controller:"homeCtrl",controllerAs:"vm"}).when("/patient",{redirectTo:"/dashboard"}).when("/messages",{templateUrl:"patient/messages/messages.view.html",controller:"messagesCtrl",controllerAs:"vm",reloadOnSearch:!1}).when("/calendar",{templateUrl:"patient/calendar/calendar.view.html",controller:"calendarCtrl",controllerAs:"vm"}).when("/exercises",{templateUrl:"patient/exercises/exercises.view.html",controller:"exercisesCtrl",controllerAs:"vm",reloadOnSearch:!1}).when("/profile",{templateUrl:"patient/profile/profile.view.html",controller:"profileCtrl",controllerAs:"vm"}).otherwise({redirectTo:"/dashboard"}),t.html5Mode(!0)}function t(e,t,a,r){r.defaults.headers.common.Authorization="Bearer "+a.getToken(),e.$on("$routeChangeStart",function(e,t,r){a.isLoggedIn()||(window.location="/login")})}angular.module("mainApp",["ngRoute"]),angular.module("mainApp").config(["$routeProvider","$locationProvider",e]).run(["$rootScope","$location","authentication","$http",t])}(),function(){function e(e,t,a,r,n){var s=this;s.everythingLoaded=!1,s.events=new Array,s.exerciseList=[],s.selectedPatient=a.currentUser()._id,s.populatedEvents=new Array,s.getEvents=function(){r.getExercise().then(function(e){console.log("getExercises"),console.log(e.data[0]._id),e.data.forEach(function(e){s.exerciseList.push(e)}),r.getEventByPatientId(s.selectedPatient).success(function(e){s.events=e,s.events.forEach(function(e){s.exerciseList.forEach(function(t){t._id==e.exercise&&(e.exercise=t)})}),s.everythingLoaded=!0,s.populateEvents(),s.cal()}).error(function(e){console.log(e)})})},s.getEvents(),s.populateEvents=function(){s.populatedEvents=[];for(var e=0,t=s.events.length;e<t;e++){var a={title:"",start:"",allDay:"",patient:"",exercise:"",gameData:"",completed:"",end:"",type:"",url:"",color:"",description:""};console.log(s.events[e].exercise),"Appointment"==s.events[e].type?a.title="Appointment":a.title=s.events[e].exercise.name,a.start=s.events[e].date,a.end=s.events[e].endTime,a.allDay=0,a.patient=s.events[e].patient,a.exercise=s.events[e].exercise,a.gameData=s.events[e].gameData,a.completed=s.events[e].completed,a.type=s.events[e].type,"appointment"==a.type||1==a.type||"true"==a.type?(a.backgroundColor="#FFBF10",a.textColor="FFFFFF"):null!=a.type&&"false"!=a.type&&""!=a.type&&0!=a.type||(a.backgroundColor="#FF6c3e",a.textColor="FFFFFF"),1==a.completed&&(a.backgroundColor="#1993DC",a.textColor="FFFFFF"),s.populatedEvents.push(a)}},s.allExercises=[],s.allPatients=[],s.graphDisplayed=!1,s.zoom=!1,s.options={mainGraph:"",modalGraph:""},s.options.modalGraph={scales:{yAxes:[{scaleLabel:{display:!0,labelString:"Pressure Values"}}],xAxes:[{scaleLabel:{display:!0,labelString:"Time (Seconds)"}}]}},s.options.mainGraph={scales:{yAxes:[{scaleLabel:{display:!0,labelString:"Average Pressure Values"}}],xAxes:[{scaleLabel:{display:!0,labelString:"gameData Objects"}}]}},s.modal={title:"",details:""},s.graphData={storedObjects:[],datasets:[],labels:[],type:"line",datasetIndex:0,index:0};var o=Chart.helpers.color;s.colors=[],s.colors[0]={light:o(window.chartColors.red).alpha(.3).rgbString(),dark:window.chartColors.red},s.colors[1]={light:o(window.chartColors.blue).alpha(.3).rgbString(),dark:window.chartColors.blue},s.colors[2]={light:o(window.chartColors.green).alpha(.3).rgbString(),dark:window.chartColors.green},s.colors[3]={light:o(window.chartColors.purple).alpha(.3).rgbString(),dark:window.chartColors.purple},s.colors[4]={light:o(window.chartColors.orange).alpha(.3).rgbString(),dark:window.chartColors.orange},s.cal=function(){$("#calendar").fullCalendar({header:{left:"prev,next today",center:"title",right:"month,basicWeek,basicDay"},defaultDate:"2017-02-12",timezone:"local",navLinks:!0,editable:!0,eventLimit:!0,events:s.populatedEvents,eventClick:function(e){if(console.log(e),e.url)return 0},eventRender:function(e){e.patient,e.exercise,e.gameData,e.completed,e.type}})}}angular.module("mainApp").controller("calendarCtrl",e),e.$inject=["$compile","$location","authentication","dataService","$scope"]}(),function(){function e(e,t,a){function r(e,t){return new Date(t.date).getTime()-new Date(e.date).getTime()}var n=this;n.pastExerciseCount=0,n.unreadCount=0,e.myEvents=[],e.today=new Date,e.allex=[],e.mssg=[],e.myGameData=[],e.doctorName,e.thisUserId=t.currentUser()._id,e.getTime=function(e){var t=new Date(e),a=t.getMinutes();return 0==a&&(a="00"),t.getHours()+":"+a},e.getExercise=function(){a.getExercise().success(function(t){e.allex=t,e.myEvents.forEach(function(t){e.allex.forEach(function(e){t.exercise==e._id&&(t.exercise=e)})})})},e.getData=function(){a.getEventByPatientId(e.thisUserId).success(function(t){t.forEach(function(t){var a=new Date(t.date);e.today.toDateString()==a.toDateString()&&(e.myEvents.push(t),e.allex.push(t.exercise))}),e.getExercise(),e.getMessages(),e.getGameData(),a.getDoctor().success(function(t){e.doctorName=t.name})})},e.getGameData=function(){a.getGameDataForPatient(t.currentUser()._id).then(function(t){n.pastExerciseCount=0,t.data.sort(r);for(var a=0;a<10;a++)n.pastExerciseCount++,e.myGameData[a]=t.data[a],e.myGameData[a].date=new Date(t.data[a].date);e.myGameData.forEach(function(t){e.allex.forEach(function(e){t.exercise==e._id&&(t.exercise=e)})})})},e.getMessages=function(){a.getMessages().then(function(t){e.mssg=t.data,n.parseMessageData()})},n.dateString=function(e){var e=new Date(e);return e.toDateString()+", "+e.toLocaleTimeString()},n.parseMessageData=function(){var t=0;e.mssg.forEach(function(a){a.receiver==e.thisUserId&&0==a.read&&t++}),n.unreadCount=t},n.activeReply,n.replyClick=function(e){n.activeReply=e,console.log(e),a.getReplys(e._id).success(function(e){n.activeReply.replysData=e})},n.currentUser=t.currentUser(),n.replySenderName=function(t){return t==n.currentUser._id?n.currentUser.name:e.doctorName},n.postReply=function(){var e={body:n.replyBody,message:n.activeReply._id};a.postReply(e).success(function(e){n.replyBody="",n.replyClick(n.activeReply),jQuery("#reply-modal .alert-div").html('<div class="alert alert-dismissible alert-success"><button type="button" class="close" data-dismiss="alert">&times;</button>Your reply has successfully been sent.</div>')}).error(function(){jQuery("#reply-modal .alert-div").html('<div class="alert alert-dismissible alert-danger"><button type="button" class="close" data-dismiss="alert">&times;</button>There was an error sending your reply.</div>')})},e.getData()}angular.module("mainApp").controller("homeCtrl",e),e.$inject=["$scope","authentication","dataService"]}(),function(){function e(e,t,a,r){var n=this;n.allExercises=[],n.allPatients=[],n.originalObject=null,n.graphDisplayed=!1,n.zoom=!1,n.showSim=!1,n.currentPatient=r.currentUser(),n.mainGraph={labels:{yAxes:"Average Pressure Values",xAxes:"Game Objects"}},n.mainGraph.options={scales:{yAxes:[{scaleLabel:{display:!0,labelString:n.mainGraph.labels.yAxes}}],xAxes:[{scaleLabel:{display:!0,labelString:n.mainGraph.labels.xAxes}}]}},n.modalGraph={labels:{yAxes:"Pressure Values",xAxes:"Time (Seconds)"}},n.modalGraph.options={scales:{yAxes:[{scaleLabel:{display:!0,labelString:n.modalGraph.labels.yAxes}}],xAxes:[{scaleLabel:{display:!0,labelString:n.modalGraph.labels.xAxes},ticks:{autoSkip:!1}}]}},n.refreshOptions=function(){n.mainGraph.options={scales:{yAxes:[{scaleLabel:{display:!0,labelString:n.mainGraph.labels.yAxes}}],xAxes:[{scaleLabel:{display:!0,labelString:n.mainGraph.labels.xAxes}}]}},n.modalGraph.options={scales:{yAxes:[{scaleLabel:{display:!0,labelString:n.modalGraph.labels.yAxes}}],xAxes:[{scaleLabel:{display:!0,labelString:n.modalGraph.labels.xAxes},ticks:{autoSkip:!1}}]}}},n.currentDate={date:"",day:"",month:"",year:"",string:""},n.nextDate={date:"",day:"",month:"",year:"",string:""},n.setFormDate=function(){n.currentDate.date=new Date,n.currentDate.date.setHours(0,0,0,0),console.log("CURRENT DATE: "+n.currentDate.date),n.currentDate.day=n.currentDate.date.getUTCDate(),n.currentDate.month=n.currentDate.date.getUTCMonth()+1,n.currentDate.year=n.currentDate.date.getFullYear(),n.currentDate.string=n.currentDate.month+"-"+n.currentDate.day+"-"+n.currentDate.year,console.log("CURRENT DATE STRING: "+n.currentDate.string),n.nextDate.date=new Date,n.nextDate.date.setHours(0,0,0,0),n.nextDate.date.setDate(n.nextDate.date.getDate()+7),console.log("NEXT DATE: "+n.nextDate.date),n.nextDate.day=n.nextDate.date.getUTCDate(),n.nextDate.month=n.nextDate.date.getUTCMonth()+1,n.nextDate.year=n.nextDate.date.getFullYear(),n.nextDate.string=n.nextDate.month+"-"+n.nextDate.day+"-"+n.nextDate.year,console.log("NEXT DATE STRING: "+n.nextDate.string)},n.setFormDate(),n.form={date:"",month:n.currentDate.month+"/"+n.currentDate.year,exercise:null,patient:null,startDate:n.currentDate.string,endDate:n.nextDate.string},void 0!=a.param&&(console.log("PARAMS-------"),console.log(a.param.patientID),n.form.patient=a.param.patientID,document.getElementById("patient-select").innerHTML="<option>"+a.param.patientID+"</option>"),n.modal={title:"",details:""},n.graphData={storedObjects:[],datasets:[],labels:[],type:"line",pressureType:0,index:0};var s=Chart.helpers.color;n.colors=[],n.colors[0]={light:s(window.chartColors.red).alpha(.3).rgbString(),dark:window.chartColors.red},n.colors[1]={light:s(window.chartColors.blue).alpha(.3).rgbString(),dark:window.chartColors.blue},n.colors[2]={light:s(window.chartColors.green).alpha(.3).rgbString(),dark:window.chartColors.green},n.colors[3]={light:s(window.chartColors.purple).alpha(.3).rgbString(),dark:window.chartColors.purple},n.colors[4]={light:s(window.chartColors.orange).alpha(.3).rgbString(),dark:window.chartColors.orange},$("#graphArea").hide(),n.initInputFields=function(){n.patientNames=[],e.getPatients().success(function(e){n.patientNames=e.map(function(e){return{id:e._id,text:e.name}}),$("#patient-select").select2({data:n.patientNames,placeholder:"Select a patient"}),$("#patient-select-range").select2({data:n.patientNames,placeholder:"Select a patient"})}),$("#patient-select").on("change",function(){n.form.patient=$("#patient-select").val()}),$("#patient-select-range").on("change",function(){n.form.patient=$("#patient-select-range").val()}),n.exerciseNames=[],e.getExercise().success(function(e){n.allExercises=e,n.exerciseNames=e.map(function(e){return{id:e._id,text:e.name}}),$("#exercise-select").select2({data:n.exerciseNames,placeholder:"Select an Exercise"}),$("#exercise-select-range").select2({data:n.exerciseNames,placeholder:"Select an Exercise"})}),$("#exercise-select").on("change",function(){n.form.exercise=$("#exercise-select").val()}),$("#exercise-select-range").on("change",function(){n.form.exercise=$("#exercise-select-range").val()})},n.initDatePickers=function(){$("#monthPicker").datepicker({format:"mm/yyyy",viewMode:"months",minViewMode:"months",orientation:"bottom",autoclose:!0}).on("changeDate",function(){n.form.month=$("#_monthPicker").val()}),$("#monthPicker").datepicker("update",n.form.month),$("#_startDate").datepicker("update",n.form.startDate),$("#_endDate").datepicker("update",n.form.endDate),$(".input-daterange").datepicker({format:"mm-dd-yyyy",orientation:"bottom",autoclose:!0}).on("changeDate",function(){n.form.startDate=$("#_startDate").val(),n.form.endDate=$("#_endDate").val()})},n.initInputFields(),n.initDatePickers(),n.viewALLByRange=function(){if(null==n.form.exercise)return alert("Please select an exercise"),0;console.log("Form: "),console.log(n.form),n.clearObjects();var e=new Date(n.form.startDate),t=new Date(n.form.endDate);n.modal.title=e.toDateString()+" - "+t.toDateString(),$("#graphArea").slideDown(),n.createQuery(e,t)},n.viewALLByMonth=function(){if(null==n.form.exercise)return alert("Please select an exercise"),0;n.clearObjects(),console.log(n.form.exercise);var e=n.form.month.split("/"),t=e[0]+"-01-"+e[1];t=new Date(t);var a=t.getUTCMonth()+2+"-01-"+e[1];a=new Date(a),a.setDate(a.getDate()-1),n.modal.title=n.setMonthString(t.getUTCMonth()+1),n.createQuery(t,a)},n.createQuery=function(t,a){e.queryDateRange(t,a,n.currentPatient._id,n.form.exercise).success(function(e){console.clear(),console.log(e.length),console.log(e),0!=e.length?($("#graphArea").slideDown(),e=n.sortByDate(e),n.graphData.datasets=n.graphALLavg(e,n.form.exercise.name),n.updateMainGraph()):0==e.length&&alert("Error: no data found.")})},n.graphALLavg=function(e,t){console.log("GRAPHING ALL AVG");for(var a=[],r=[],s=[],o=[],l=[],i=0;i<e.length;i++){var c=0,d=0,u=0,g=0;l[i]=i,n.graphData.storedObjects[i]=e[i];for(var p=0;p<e[i].pressureAxial.length;p++)c+=e[i].pressureAxial[p],d+=e[i].pressureA[p],u+=e[i].pressureB[p],g+=e[i].pressureC[p];a[i]=c/e[i].pressureAxial.length,r[i]=d/e[i].pressureA.length,s[i]=u/e[i].pressureB.length,o[i]=g/e[i].pressureC.length}n.graphData.labels=l;var m=0,h=[{label:"Axial",backgroundColor:n.colors[m%n.colors.length].light,borderColor:n.colors[m++%n.colors.length].dark,borderWidth:1,data:a},{label:"A",backgroundColor:n.colors[m%n.colors.length].light,borderColor:n.colors[m++%n.colors.length].dark,borderWidth:1,data:r},{label:"B",backgroundColor:n.colors[m%n.colors.length].light,borderColor:n.colors[m++%n.colors.length].dark,borderWidth:1,data:s},{label:"C",backgroundColor:n.colors[m%n.colors.length].light,borderColor:n.colors[m++%n.colors.length].dark,borderWidth:1,data:o}];return h},n.clearObjects=function(){n.graphData.storedObjects=[],n.graphData.datasets=[],n.graphData.labels=[],n.datasetIndex=0,n.index=0},n.clearForm=function(){n.form={date:"",month:n.currentDate.month+"/"+n.currentDate.year,exercise:null,patient:null,startDate:n.currentDate.string,endDate:n.nextDate.string},$("#exercise-select").select2("val",null),$("#exercise-select-range").select2("val",null),$("#patient-select").select2("val",null),$("#patient-select-range").select2("val",null)},n.clearGraph=function(){console.clear(),console.log("CLEARING GRAPH"),n.clearObjects(),n.clearForm();var e=n.resetCanvas();e.remove(),$("#graphArea").hide()},n.graphPressure=function(e,t,a){console.log("Graphing Pressure:"),console.log(a);var r=[],s=[],o=0,l="";switch(t){case 0:n.modalGraph.labels.yAxes="Pressure (Axial)",n.refreshOptions(),l=e.pressureAxial;break;case 1:n.modalGraph.labels.yAxes="Pressure (A)",n.refreshOptions(),l=e.pressureA;break;case 2:n.modalGraph.labels.yAxes="Pressure (B)",n.refreshOptions(),l=e.pressureB;break;case 3:n.modalGraph.labels.yAxes="Pressure (C)",n.refreshOptions(),l=e.pressureC}for(var i=0;i<l.length;i++)i%50==0?(s[i]=o,o++):s[i]="",r[i]=l[i];var c={label:a,backgroundColor:n.colors[t%n.colors.length].light,borderColor:n.colors[t%n.colors.length].dark,borderWidth:1,data:r};return n.graphData.labels=s,c},n.updateMainGraph=function(){console.log("-------------------\n Updating Chart Data \n-------------------"),n.graphDisplayed=!0;var e=n.resetCanvas();console.log("vm.graphData.datasets"),console.log(n.graphData.datasets);for(var a=-1,r=[],s=0;s<n.graphData.labels.length;s++)n.graphData.labels[s].length>a&&(r=n.graphData.labels[s]);var o={type:n.graphData.type,data:{labels:n.graphData.labels,datasets:n.graphData.datasets},options:n.mainGraph.options},l=new Chart(document.getElementById("my-graph").getContext("2d"),o);e.remove(),console.log("graph created"),document.getElementById("my-graph").onclick=function(e){var a=l.getElementAtEvent(e),r=a[0];if(void 0!==r){n.zoom=!0,n.graphData.pressureType=r._datasetIndex,n.graphData.index=r._index,console.log("pointIndex: "+n.graphData.index);var s=n.graphData.storedObjects[n.graphData.index];console.log("DATA OBJECT: "),console.log(s);var o=new Date(s.date);o.setHours(0,0,0,0),console.log(o),n.modal.details=o.toDateString(),n.modal.gameObject=s,n.originalObject=s,$("#myModal").modal("show"),n.displayObject(s),t.$apply()}}},n.resetCanvas=function(){var e=$(".chartjs-hidden-iframe");e.remove();var t=$("#my-graph");return t.removeAttr("id"),$("#graph").append('<canvas id="my-graph">'),t},n.updateModalGraph=function(){console.clear(),console.log("Updating Modal Graph"),n.graphDisplayed=!0;var e=n.resetModalCanvas();console.log("vm.graphData.datasets"),console.log(n.graphData.datasets),console.log(n.modalGraph);var t={type:n.graphData.type,data:{labels:n.graphData.labels,datasets:n.graphData.datasets},options:n.modalGraph.options};new Chart(document.getElementById("my-modalGraph").getContext("2d"),t),e.remove()},n.resetModalCanvas=function(){var e=$("#modalGraph > .chartjs-hidden-iframe");e.remove();var t=$("#my-modalGraph");return t.removeAttr("id"),$("#modalGraph").append('<canvas id="my-modalGraph">'),t},n.displayObject=function(t){console.log("Displaying Object:"),console.log(t),console.log(t.exercise),e.getSingleExercise(t.exercise).success(function(e){n.graphData.datasets=[],n.graphData.datasets[0]=n.graphPressure(t,n.graphData.pressureType,e[0].name),n.modal.exercise=e[0].name,n.updateModalGraph()})},n.next=function(){console.log("Next>>>>>>>>>>>>>>>>>>>>>>>>>>");try{n.graphData.index++,console.log(n.graphData.index);var e=n.graphData.storedObjects[n.graphData.index];n.originalObject=e,console.log(e);var t=new Date(e.date);t.setMinutes(0,0,0,0),console.log(t),n.modal.details=t.toDateString(),n.modal.gameObject=e,n.displayObject(e)}catch(e){console.log("error: "+e),n.graphData.index--}},n.prev=function(){console.log("Prev<<<<<<<<<<<<<<<<<<<<<<<<<<");try{n.graphData.index--,console.log(n.graphData.index);var e=n.graphData.storedObjects[n.graphData.index];n.originalObject=e,console.log(e);var t=new Date(e.date);t.setHours(0,0,0,0),console.log(t),n.modal.details=t.toDateString(),n.modal.gameObject=e,n.displayObject(e)}catch(e){console.log("error: "+e),n.graphData.index++}},n.setMonthString=function(e){var t;return 1==e?t="Janurary":2==e?t="February":3==e?t="March":4==e?t="April":5==e?t="May":6==e?t="June":7==e?t="July":8==e?t="August":9==e?t="September":10==e?t="October":11==e?t="November":12==e&&(t="December"),t},n.changeGraphType=function(e,t){console.log("Type: "+e),n.graphData.type=e,"main"==t?n.updateMainGraph():"modal"==t&&n.updateModalGraph()},n.sortByDate=function(e){for(var t=0;t<e.length-1;t++){for(var a=t,r=t+1;r<e.length;r++)e[r].date<e[a].date&&(a=r);var n=e[t];e[t]=e[a],e[a]=n}return e},n.sortByExercise=function(e){for(var t=0;t<e.length-1;t++){for(var a=t,r=t+1;r<e.length;r++)e[r].code<e[a].code&&(a=r);var n=e[t];e[t]=e[a],e[a]=n}return e}}angular.module("mainApp").controller("exercisesCtrl",e),e.$inject=["dataService","$scope","$routeParams","authentication"]}(),function(){function e(e,t,a){var r=this;r.currentUser=a.currentUser(),r.messages,r.receivedCount,r.sentCount,r.unreadCount,r.initUnreadCount,r.everythingLoaded=!1,r.doctorName,r.compose={messageSubject:"",messageBody:""},r.replyBody="",t.getDoctor().success(function(e){r.doctorName=e.name}),r.getMessages=function(){t.getMessages().success(function(e){r.messages=e,r.messageCount=e.length,r.everythingLoaded=!0,r.parseMessageData()})},r.activeReply,r.replyClick=function(e){r.activeReply=e,t.getReplys(e._id).success(function(e){r.activeReply.replysData=e})},r.postReply=function(){var e={body:r.replyBody,message:r.activeReply._id};t.postReply(e).success(function(e){r.replyBody="",r.replyClick(r.activeReply),jQuery("#reply-modal .alert-div").html('<div class="alert alert-dismissible alert-success"><button type="button" class="close" data-dismiss="alert">&times;</button>Your reply has successfully been sent.</div>')}).error(function(){jQuery("#reply-modal .alert-div").html('<div class="alert alert-dismissible alert-danger"><button type="button" class="close" data-dismiss="alert">&times;</button>There was an error sending your reply.</div>')})},r.replySenderName=function(e){return e==r.currentUser._id?r.currentUser.name:r.doctorName},r.messageSend=function(){var e={messageSubject:r.compose.messageSubject,messageBody:r.compose.messageBody};t.patientPostMessage(e).success(function(e){r.compose.messageSubject="",r.compose.messageBody="",r.sentCount++,jQuery("#compose .alert-div").html('<div class="alert alert-dismissible alert-success"><button type="button" class="close" data-dismiss="alert">&times;</button>Your message has successfully been sent.</div>')}).error(function(){jQuery("#compse .alert-div").html('<div class="alert alert-dismissible alert-danger"><button type="button" class="close" data-dismiss="alert">&times;</button>There was an error sending your message.</div>')})},r.readMessage=function(a){a.read||a.sender==r.currentUser._id||$("#rec-"+a._id+" .panel-heading").hasClass("message-unread")&&($("#rec-"+a._id+" .panel-heading").removeClass("message-unread"),$("#unread-"+a._id+" .panel-heading").removeClass("message-unread"),t.toggleMessage(a._id).success(function(){e.$emit("messageRead"),r.unreadCount--})),a.replys&&a.replys.length>0&&t.getReplys(a._id).success(function(e){a.replysData=e})},r.markUnread=function(a){t.toggleMessage(a._id).success(function(){r.unreadCount++,e.$emit("messageUnread"),a.read=!1,$("#rec-"+a._id+" .panel-heading").addClass("message-unread"),$("#unread-"+a._id+" .panel-heading").addClass("message-unread")})},r.isMessageRead=function(e){return e?"message-read":"message-unread"},r.parseMessageData=function(){var e=0,t=0,a=0;r.messages.forEach(function(n){n.sender==r.currentUser._id&&a++,n.receiver==r.currentUser._id&&(t++,0==n.read&&e++)}),r.sentCount=a,r.receivedCount=t,r.unreadCount=e,r.initUnreadCount=e},r.dateString=function(e){var e=new Date(e);return e.toDateString()+", "+e.toLocaleTimeString()},r.getMessages()}angular.module("mainApp").controller("messagesCtrl",e),e.$inject=["$scope","dataService","authentication"]}(),function(){function e(e,t){var a=this;a.user={},t.getProfile().success(function(e){a.user=e}).error(function(e){console.log(e)})}angular.module("mainApp").controller("profileCtrl",e),e.$inject=["$location","dataService"]}(),function(){function e(e,t,a,r,n){var s=this;s.signOut=function(){r.logout()},s.loaded=!1,s.numNewMessages,s.getNumUnread=function(){n.numUnreadMessages().success(function(e){s.numNewMessages=e.count,s.loaded=!0,s.numNewMessages>0&&$("#sidebar-messages").addClass("show-circle")})},e.$on("messageRead",function(){s.numNewMessages--,s.numNewMessages<=0&&(s.numNewMessages=0,$("#sidebar-messages").removeClass("show-circle"))}),e.$on("messageUnread",function(){s.numNewMessages++,$("#sidebar-messages").hasClass("show-circle")||$("#sidebar-messages").addClass("show-circle")}),s.sidebarInit=function(e){$("#menu-toggle").click(function(e){e.preventDefault(),$("#main-wrapper").toggleClass("toggled")}),$("sidebar ul.sidebar-nav li").each(function(){$(this).find("a").attr("href").match(e)?$(this).addClass("active"):$(this).removeClass("active")})},s.getNumUnread(),s.sidebarInit(a.path())}angular.module("mainApp").controller("sidebarCtrl",e),e.$inject=["$scope","$rootScope","$location","authentication","dataService"]}(),function(){function e(){return{templateUrl:"patient/common/directives/sidebar/sidebar.template.html",controller:"sidebarCtrl as sidevm"}}angular.module("mainApp").directive("sidebar",e)}(),function(){function e(e,t){var a=function(e){t.localStorage["auth-token"]=e},r=function(){return t.localStorage["auth-token"]},n=function(){var e,a=r();return!!a&&(e=a.split(".")[1],e=t.atob(e),e=JSON.parse(e),e.exp>Date.now()/1e3)},s=function(){if(n()){var e=r(),a=e.split(".")[1];return a=t.atob(a),a=JSON.parse(a),{_id:a._id,email:a.email,name:a.name,role:a.role}}return!1},o=function(){return s().role},l=function(t){return e.post("/api/register",t).success(function(e){a(e.token)})},i=function(t){return e.post("/api/register-patient",t)},c=function(t){return e.post("/api/login",t).success(function(e){a(e.token)}).error(function(e){})},d=function(){t.localStorage.removeItem("auth-token"),t.location.reload()};return{currentUser:s,currentUserRole:o,saveToken:a,getToken:r,isLoggedIn:n,register:l,registerPatient:i,login:c,logout:d}}angular.module("mainApp").factory("authentication",e),e.$inject=["$http","$window"]}(),function(){function e(e,t){var a=function(){return e.get("/api/profile")},r=function(){return e.get("/api/get-patients")},n=function(){return e.get("/api/get-doctor")},s=function(t){return e.post("/api/doctor-post-message",t)},o=function(t){return e.post("/api/patient-post-message",t)},l=function(t){return e.post("/api/toggle-message",{message:t})},i=function(){return e.get("/api/num-unread-messages")},c=function(){return console.log("getting messages"),e.get("/api/get-messages")},d=function(t){return e.post("/api/post-reply",t)},u=function(t){return e.get("/api/get-replys/"+t)},g=function(){return e.get("/api/get-exercises")},p=function(t){return console.log("Sending to server:"),e.post("/api/get-single-exercise",{exercise:t})},m=function(t){return e.post("/api/post-exercise",t)},h=function(){return e.get("/api/get-event")},f=function(){return e.get("/api/get-patientevent")},v=function(t){return console.log("dataservice: "+t),e.post("/api/get-eventByPatientId",{_id:t})},y=function(t){return e.post("/api/post-event",t)},D=function(){return e.get("/api/get-gamedata")},b=function(t){return e.post("/api/get-gamedata-by-id",{_id:t})},x=function(t){return e.post("/api/getGameDataForPatient",{patient:t})},C=function(){return console.log("getting"),e.post("/api/generate-gamedata")},w=function(t){return e.post("/api/query-gamedata-single",{date:t})},A=function(t,a,r,n){return e.post("/api/query-gamedata-range",{startDate:t,endDate:a,patient:r,exercise:n})},$=function(t,a){return e.post("/api/query-gamedata-month",{startDate:t,endDate:a})},S=function(t){return e.post("/api/post-gamedata",{date:t.date,time:t.time,code:t.code,pressure:t.pressure})};return{getProfile:a,getPatients:r,getDoctor:n,doctorPostMessage:s,patientPostMessage:o,toggleMessage:l,numUnreadMessages:i,getMessages:c,postReply:d,getReplys:u,getExercise:g,getSingleExercise:p,postExercise:m,getEvents:h,getEventByPatientId:v,postEvent:y,getPatientEvents:f,getGameData:D,getGameDataForPatient:x,getGameDataById:b,postGameData:S,querySingleDate:w,queryDateRange:A,queryMonth:$,generateGameData:C}}angular.module("mainApp").service("dataService",e),e.$inject=["$http","authentication"]}(),function(){function e(e,t){var a=this;a.isLoggedIn=t.isLoggedIn(),a.currentUser=t.currentUser(),a.signOut=function(){t.logout()}}angular.module("mainApp").controller("navigationCtrl",e),e.$inject=["$location","authentication"]}(),function(){function e(){return{restrict:"EA",templateUrl:"/common/directives/navigation/navigation.template.html",controller:"navigationCtrl as navvm"}}angular.module("mainApp").directive("navigation",e)}();